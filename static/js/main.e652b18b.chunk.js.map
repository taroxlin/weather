{"version":3,"sources":["image sync /^/.*$","image/bg.jpg","image/selfie.png","components/weatherform.js","components/weatherresult.js","components/weatherapp.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","WeatherForm","props","className","type","placeholder","value","onChange","change","onClick","submit","localizeMe","WeatherResult","weather","err","city","date","temp","feels_like","sunrise","sunset","pressure","windspeed","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","APIWkey","WeatherApp","state","IMG","imgName","require","handleCitySubmit","preventDefault","API","fetch","then","response","ok","json","data","time","toLocaleString","setState","prevState","sys","main","wind","speed","catch","console","log","handleInputChange","target","handleLocalization","navigator","geolocation","getCurrentPosition","successLocalisation","failedLocalisation","pos","lat","coords","latitude","lon","longitude","APILoc","name","alert","alt","src","this","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e652b18b.chunk.js","sourcesContent":["var map = {\n\t\"./bg.jpg\": 16,\n\t\"./selfie.png\": 17\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 15;","module.exports = __webpack_public_path__ + \"static/media/bg.37d378af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/selfie.4be31476.png\";","import React from 'react';\r\n\r\n\r\n const WeatherForm =props=>{\r\n\r\n    return (\r\n        <form className=\"formClass\" >\r\n        <input \r\n        id=\"typedCity\" \r\n        type=\"text\" \r\n        placeholder=\"Write a city...\" \r\n        value={props.value}\r\n        onChange={props.change}/>\r\n            <button onClick={props.submit} id=\"subButton\">Check</button>\r\n            <button onClick={props.localizeMe} id=\"locButton\">Locate Me</button>\r\n        </form>\r\n        )\r\n    }\r\n        \r\nexport default WeatherForm","import React from 'react'\r\n\r\nconst WeatherResult = props => {\r\n\r\n    const { err, city, date, temp, feels_like, sunrise, sunset, pressure, windspeed } = props.weather\r\n\r\n    let content = null;\r\n    if(!err && city ){\r\n        const sunriseTime = new Date(sunrise*1000).toLocaleTimeString()\r\n        const sunsetTime = new Date(sunset*1000).toLocaleTimeString()\r\n        content =(\r\n            <div className=\"ResultInfo\">\r\n                <h3>{`Wyszukiwanie dla miasta: ${city}`}</h3>\r\n                <h4>{`Data ${date}`}</h4>\r\n                <h4>{`Temp. powietrza: ${temp}°C`}</h4>\r\n                <h4>{`Temp. odczuwalna: ${feels_like}°C`}</h4>\r\n                <h4>{`Wschód słonca: ${sunriseTime}`}</h4>\r\n                <h4>{`Zachód słonca: ${sunsetTime}`}</h4>\r\n                <h4>{`Ciśnienie powietrza ${pressure} hPa`}</h4>\r\n                <h4>{`Siła wiatru ${windspeed} m/s`}</h4>\r\n         </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"ResultCont\">\r\n        {err? `Nie można znalesc miasta ${city}!`: content }\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default WeatherResult ","/*\r\nweather key \r\nhttps://api.openweathermap.org/data/2.5/weather?q={this.state.value}k&appid=2481fb9c00fa150040b10da0e356266a\r\nhttps://samples.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=2481fb9c00fa150040b10da0e356266a\r\n\r\n\r\n\r\n*/\r\nimport React from 'react';\r\nimport WeatherForm from './weatherform'\r\nimport WeatherResult from './weatherresult'\r\n\r\n/* key for Weather app*/\r\nconst APIWkey = '2481fb9c00fa150040b10da0e356266a'\r\n\r\nclass WeatherApp extends React.Component {\r\n    state = {\r\n            value: '',\r\n            date: '',\r\n            city: '',\r\n            temp: '',\r\n            sunrise: '',\r\n            sunset: '',\r\n            pressure: '',\r\n            windspeed: '',\r\n            feels_like:'',\r\n            err: false\r\n    }\r\n\r\n    IMG = imgName => {\r\n        return require(`../image/${imgName}`)\r\n    }\r\n\r\n\r\n    handleCitySubmit = e => {\r\n        e.preventDefault()\r\n        const API =\r\n            `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&units=metric&appid=${APIWkey}`;\r\n\r\n        fetch(API)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response\r\n                }\r\n                throw Error(\"Blad 404\")\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const time = new Date().toLocaleString()\r\n\r\n                this.setState(prevState =>({\r\n                    err: false,\r\n                    date: time,\r\n                    sunrise: data.sys.sunrise,\r\n                    sunset: data.sys.sunset,\r\n                    temp: data.main.temp,\r\n                    feels_like: data.main.feels_like,\r\n                    pressure: data.main.pressure,\r\n                    windspeed: data.wind.speed,\r\n                    city: this.state.value,\r\n                }))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                this.setState(prevState =>({\r\n                    err: true,\r\n                    city: prevState.value\r\n                }))\r\n            })\r\n    }\r\n\r\n    handleInputChange = e => {\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    handleLocalization=e=>{\r\n        e.preventDefault()\r\n        navigator.geolocation.getCurrentPosition(this.successLocalisation,this.failedLocalisation)\r\n    }\r\n\r\n    successLocalisation=pos=>{\r\n        const lat = pos.coords.latitude\r\n        const lon = pos.coords.longitude\r\n        const APILoc = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${APIWkey}`\r\n        \r\n        fetch(APILoc)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response\r\n                }\r\n                throw Error(\"Blad 404\")\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const time = new Date().toLocaleString()\r\n\r\n                this.setState(prevState =>({\r\n                    err: false,\r\n                    date: time,\r\n                    sunrise: data.sys.sunrise,\r\n                    sunset: data.sys.sunset,\r\n                    temp: data.main.temp,\r\n                    feels_like: data.main.feels_like,\r\n                    pressure: data.main.pressure,\r\n                    windspeed: data.wind.speed,\r\n                    city: data.name,\r\n                }))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                this.setState(prevState =>({\r\n                    err: true,\r\n                }))\r\n            })\r\n    }\r\n\r\n\r\n    failedLocalisation=err=>{\r\n        alert(`Please turn ON geolocation at your webbrowser!`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='weatherAppClass'>\r\n                <img className='bgImage' alt='Global Map' src={this.IMG('bg.jpg')} />\r\n                <h1 className=\"title\">Check Your Weather!</h1>\r\n                <WeatherForm\r\n                    value={this.state.value}\r\n                    change={this.handleInputChange}\r\n                    submit={this.handleCitySubmit}\r\n                    localizeMe={this.handleLocalization}\r\n                />\r\n                <WeatherResult\r\n                   weather={this.state}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default WeatherApp  \r\n\r\n\r\n/*e.preventDefault()*/","import React from 'react';\nimport './App.css';\nimport WeatherApp from './components/weatherapp.js'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <WeatherApp/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}